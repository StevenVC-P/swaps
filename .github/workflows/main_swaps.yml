name: Build and deploy Node.js app to Azure Web App - StevenVanCourt

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install and build the server
      - name: Install and build server
        run: |
          npm ci
          # Assume you have a build script for server, if not remove the next line
          npm run build --if-present 

      # Install and build the client
      - name: Install and build client
        run: |
          cd client
          npm ci
          npm run build

      - name: Zip the server and client builds
        run: |
          zip -r server-build.zip ./* -x "client/*"
          zip -r client-build.zip ./client/build/

      - name: Upload server build artifact
        uses: actions/upload-artifact@v2
        with:
          name: server-build-artifact
          path: server-build.zip

      - name: Upload client build artifact
        uses: actions/upload-artifact@v2
        with:
          name: client-build-artifact
          path: client-build.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download server build artifact
        uses: actions/download-artifact@v2
        with:
          name: server-build-artifact

      - name: Download client build artifact
        uses: actions/download-artifact@v2
        with:
          name: client-build-artifact

      - name: Unzip server build
        run: unzip server-build.zip -d ./server

      - name: Unzip client build
        run: unzip client-build.zip -d ./client

      # Deploy to Azure Web App (you might need to adjust this part based on how your Azure app expects files)
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'Swaps'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6793DE84C4C54BF291358D26ED28C933 }}
          package: ./server  # Make sure your Azure app knows how to serve both front-end and back-end
